name: Release Package CI

on:
  push:
    tags: ["v*"]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      git_tag: ${{ steps.extract_tag.outputs.git_tag }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true
          submodules: 'recursive'

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build release package
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          file: Dockerfile.package-builder
          outputs: type=local,dest=package-build/
          cache-from: type=gha,scope=release-build
          cache-to: type=gha,mode=max,scope=release-build

      - name: List built packages
        run: ls package-build

      - name: Store the distribution packages
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: package-build/

      - name: Extract git tag & generate change log
        id: extract_tag
        run: |
          GIT_TAG="$(git describe --tags --abbrev=0)"
          echo "git_tag=$GIT_TAG" >> "$GITHUB_OUTPUT"
          echo "Using git tag: $GIT_TAG"
          docker run --rm -v "$PWD":/workdir quay.io/git-chglog/git-chglog "$GIT_TAG" > changelog.md
          cat changelog.md

      - name: Store changelog
        uses: actions/upload-artifact@v4
        with:
          name: changelog
          path: changelog.md

  publish-to-pypi:
    name: Publish to PyPI
    if: github.ref_type == 'tag'
    needs:
      - build
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/wujihandpy
    permissions:
      id-token: write
      contents: write

    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

      - name: Publish distribution to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist

      - name: Download changelog
        uses: actions/download-artifact@v4
        with:
          name: changelog
          path: .

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.build.outputs.git_tag }}
          name: ${{ needs.build.outputs.git_tag }}
          body_path: changelog.md
          draft: false
          prerelease: false
          make_latest: true
          files: |
            dist/*.whl
