name: Release Package CI

on:
  push:
    tags: ["v*"]
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        include:
          - arch: amd64
            runner: ubuntu-latest
          - arch: arm64
            runner: ubuntu-24.04-arm
    runs-on: ${{ matrix.runner }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          submodules: recursive

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build release package (${{ matrix.arch }})
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile.package-builder
          outputs: type=local,dest=package-build/
          cache-from: type=gha,scope=release-build-${{ matrix.arch }}
          cache-to: type=gha,mode=max,scope=release-build-${{ matrix.arch }}

      - name: List built packages
        run: ls package-build

      - name: Upload built packages
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ matrix.arch }}
          path: package-build/*.whl

  publish-to-pypi:
    name: Publish to PyPI
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/wujihandpy
    permissions:
      id-token: write
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Extract git tag & generate change log
        run: |
          GIT_TAG="$(git describe --tags --abbrev=0)"
          echo "GIT_TAG=$GIT_TAG" >> "$GITHUB_ENV"
          echo "Using git tag: $GIT_TAG"
          docker run -v "$PWD":/workdir quay.io/git-chglog/git-chglog $GIT_TAG > changelog.md
          cat changelog.md

      - name: Download all dists
        uses: actions/download-artifact@v5
        with:
          path: dist/
          pattern: dist-*
          merge-multiple: true

      - name: Publish distribution to PyPI
        if: github.ref_type == 'tag'
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.GIT_TAG }}
          name: ${{ env.GIT_TAG }}
          body_path: changelog.md
          draft: false
          prerelease: ${{ github.ref_type != 'tag' }}
          make_latest: ${{ github.ref_type == 'tag' }}
          files: |
            dist/*.whl
